<%= form_with(model: [fixture.competition, fixture], id: "#{dom_id(fixture)}_form") do |form| %>
  <% if fixture.errors.any? %>
    <div id="error_explanation" class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">
      <h2><%= pluralize(fixture.errors.count, "error") %> prohibited this fixture from being saved:</h2>

      <ul>
        <% fixture.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  <div class="flex justify-center items-stretch flex-grow">
    <%= form.hidden_field :competition_id, value: fixture.competition_id %>
    <%= render Forms::LabelComponent.new(form, :date, label: fixture.date.strftime("%d/%m/%Y")) %>  
    <%= render Forms::LabelComponent.new(form, :away_score, label: fixture.home_team.name) %>  
    <%= render Forms::FieldComponent.new(form, :home_score, label: "Fixture Date", label_class: "sr-only") do |field| %>
      <% field.with_input_number(classes: "rounded-none w-16", autofocus: true, data: {controller: "autofocus"}) %>
    <% end %>    
    <%= render Forms::LabelComponent.new(form, :away_score, label: fixture.away_team.name) %>     
    <%= render Forms::FieldComponent.new(form, :away_score, label: "Fixture Home Team", label_class: "sr-only") do |field| %>
      <% field.with_input_number(classes: "rounded-none w-16") %>
    <% end %>
    <div class="py-2 px-2">
      <%= render Forms::CheckboxInputComponent.new(form, :locked) %>
    </div>
    <%= render Forms::InlineButtonSubmitComponent.new(form, rounded_class: "rounded-md") %>
  </div>
<% end %>